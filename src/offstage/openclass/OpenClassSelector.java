/*
OffstageArts: Enterprise Database for Arts Organizations
This file Copyright (c) 2005-2008 by Robert Fischer

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/
/*
 * CourseSelector.java
 *
 * Created on June 12, 2008, 1:35 PM
 */

package offstage.openclass;

import citibob.app.App;
import citibob.jschema.IntKeyedDbModel;
import citibob.jschema.SchemaBufDbModel;
import citibob.jschema.SqlBufDbModel;
import citibob.sql.SqlRun;
import citibob.sql.SqlSet;
import citibob.sql.UpdTasklet;
import citibob.swing.typed.JTypedPanel;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;

/**
 *
 * @author  citibob
 */
public class OpenClassSelector extends JTypedPanel {
	
SchemaBufDbModel daysDm;
SchemaBufDbModel classesDm;
SqlBufDbModel teachersDm;
int courserole;

	/** Creates new form CourseSelector */
	public OpenClassSelector() {
		initComponents();
		super.setSubWidget(ClassesTable);
	}
	
	Integer getDayOfWeek()
		{ return (Integer)DaysTable.getValue(); }
	
	public void initRuntime(SqlRun str, final App app, int xcourserole, Integer termid)
	{
		this.courserole = xcourserole;
		
		// ================================================
		// Days of Week
		daysDm = new SqlBufDbModel(app) {
		public SqlSet getSelectSql(boolean proto) {
			return new SqlSet(
				" select *" +
				" from daysofweek" +
				" order by javaid");
		}};
		str.execUpdate(new UpdTasklet() {
		public void run() {
			DaysTable.setModelU(daysDm.getSchemaBuf(),
				new String[] {"Day"},
				new String[] {"longname"},
				new boolean[] {false},
				app.swingerMap());
			DaysTable.setValueColU("javaid");
		}});
		
		// ================================================
		// Drill Down in Classes
		classesDm = new IntKeyedDbModel(app.getSchema("courseids"), "dayofweek");
			classesDm.setWhereClause("termid = " + termid);
//		
//		classesDm = new SqlBufDbModel(app, "courseids") {
//		public String getSelectSql(boolean proto) {
//			return
//				" select *" +
//				" from courseids" +
//				" where dayofweek = " + getDayOfWeek() +
//				" order by tstart";
//		}};
		str.execUpdate(new UpdTasklet() {
		public void run() {
			ClassesTable.setModelU(classesDm.getSchemaBuf(),
				new String[] {"Class", "Time"},
				new String[] {"name", "tstart"},
				new boolean[] {false,false},
				app.swingerMap());
			DaysTable.addPropertyChangeListener("value", new PropertyChangeListener() {
			public void propertyChange(PropertyChangeEvent evt) {
				SqlRun str = app.sqlRun();
				str.pushFlush();
					classesDm.setKey(getDayOfWeek());
					classesDm.doSelect(str);
				str.popFlush();
			}});
//			ClassesTable.setFormatU("tstart", "hh:mm a");
			ClassesTable.setValueColU("courseid");
		}});
		
		// ================================================
		// Display teachers for that class
		teachersDm = new SqlBufDbModel(app, "enrollments") {
		public SqlSet getSelectSql(boolean proto) {
			return new SqlSet(
				" select p.firstname || ' ' || p.lastname as teachername, e.*" +
				" from enrollments e, entities p" +
				" where e.entityid = p.entityid" +
				" and courseid = " + ClassesTable.getValue() +
				" and courserole = " + courserole);
		}};
		str.execUpdate(new UpdTasklet() {
		public void run() {
			TeachersTable.setModelU(teachersDm.getSchemaBuf(),
				new String[] {"Teacher", "From", "To"},
				new String[] {"teachername", "dstart", "dend"},
				new boolean[] {false,false, false},
				app.swingerMap());
			TeachersTable.setHighlightMouseover(false);
			TeachersTable.setEnabled(false);
//			TeachersTable.setHighlightSelected(false);
			ClassesTable.addPropertyChangeListener("value", new PropertyChangeListener() {
			public void propertyChange(PropertyChangeEvent evt) {
				SqlRun str = app.sqlRun();
				str.pushFlush();
					teachersDm.doSelect(str);
				str.popFlush();
			}});
			
		}});
		
		// Read it!
		str.flush();
//		str.execUpdate(new UpdTasklet2() {
//		public void run(SqlRun str) {
			daysDm.doSelect(str);
//		}});
	}
	
	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane2 = new javax.swing.JSplitPane();
        jSplitPane1 = new javax.swing.JSplitPane();
        jPanel2 = new javax.swing.JPanel();
        lDays = new javax.swing.JLabel();
        DaysSP = new javax.swing.JScrollPane();
        DaysTable = new citibob.swing.typed.JTypedSelectTable();
        jPanel3 = new javax.swing.JPanel();
        ClassesSP = new javax.swing.JScrollPane();
        ClassesTable = new citibob.swing.typed.JTypedSelectTable();
        lClases = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        lTeachers = new javax.swing.JLabel();
        DaysSP1 = new javax.swing.JScrollPane();
        TeachersTable = new citibob.swing.typed.JTypedSelectTable();

        setLayout(new java.awt.BorderLayout());

        jPanel2.setLayout(new java.awt.BorderLayout());

        lDays.setFont(new java.awt.Font("Dialog", 1, 14));
        lDays.setText("Days");
        jPanel2.add(lDays, java.awt.BorderLayout.PAGE_START);

        DaysSP.setMinimumSize(new java.awt.Dimension(130, 22));

        DaysTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        DaysSP.setViewportView(DaysTable);

        jPanel2.add(DaysSP, java.awt.BorderLayout.CENTER);

        jSplitPane1.setLeftComponent(jPanel2);

        jPanel3.setLayout(new java.awt.BorderLayout());

        ClassesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        ClassesSP.setViewportView(ClassesTable);

        jPanel3.add(ClassesSP, java.awt.BorderLayout.CENTER);

        lClases.setFont(new java.awt.Font("Dialog", 1, 14));
        lClases.setText("Classes");
        jPanel3.add(lClases, java.awt.BorderLayout.PAGE_START);

        jSplitPane1.setRightComponent(jPanel3);

        jSplitPane2.setLeftComponent(jSplitPane1);

        jPanel4.setLayout(new java.awt.BorderLayout());

        lTeachers.setFont(new java.awt.Font("Dialog", 1, 14));
        lTeachers.setText("Teachers");
        jPanel4.add(lTeachers, java.awt.BorderLayout.PAGE_START);

        DaysSP1.setMinimumSize(new java.awt.Dimension(130, 22));

        TeachersTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        DaysSP1.setViewportView(TeachersTable);

        jPanel4.add(DaysSP1, java.awt.BorderLayout.CENTER);

        jSplitPane2.setRightComponent(jPanel4);

        add(jSplitPane2, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents
	
	
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane ClassesSP;
    private citibob.swing.typed.JTypedSelectTable ClassesTable;
    private javax.swing.JScrollPane DaysSP;
    private javax.swing.JScrollPane DaysSP1;
    private citibob.swing.typed.JTypedSelectTable DaysTable;
    private citibob.swing.typed.JTypedSelectTable TeachersTable;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JSplitPane jSplitPane2;
    private javax.swing.JLabel lClases;
    private javax.swing.JLabel lDays;
    private javax.swing.JLabel lTeachers;
    // End of variables declaration//GEN-END:variables
	
}
