/*
OffstageArts: Enterprise Database for Arts Organizations
This file Copyright (c) 2005-2008 by Robert Fischer

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/
/*
 * AboutOffstageArts.java
 *
 * Created on May 7, 2008, 10:27 PM
 */

package offstage.about;

import citibob.app.App;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.MalformedURLException;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.Map;
import java.util.TreeMap;
import javax.swing.DefaultListModel;
import offstage.licensor.Licensor;

/**
 *
 * @author  citibob
 */
public class AboutOffstageArts extends javax.swing.JDialog
{

//static class Dep implements Comparable<Dep>
//{
//	String name;
//	String license;
//	public String toString() { return name; }
//	public int compareTo(Dep dep) { return name.compareTo(dep.name); }
//}

static Map<String,String> alias = new TreeMap();
static {
	alias.put("holyokereports", "holyokefw");
	alias.put("holyokewiz", "holyokefw");
	alias.put("xpp3_min", "xpp3");
	alias.put("commons", "apache");
	alias.put("activation", "sun-gpl2");
	alias.put("mail", "sun-gpl2");
	alias.put("cls", "secondstring");
//	alias.put("objcobra", "lgpl21");
	alias.put("xalan", "apache2");
	alias.put("xercesImpl", "apache2");
	alias.put("xmlParserAPIs", "apache2");
	alias.put("juh", "sun-lgpl21");
	alias.put("jurt", "sun-lgpl21");
	alias.put("ridl", "sun-lgpl21");
	alias.put("uniol", "sun-lgpl21");
	alias.put("poi", "apache2");
	alias.put("oro", "apache2");
	alias.put("log4j", "apache2");
	alias.put("xml-apis", "apache2");
	alias.put("xpp3_min", "xpp3");
	alias.put("standard", "apache2");
	alias.put("spring-aop", "spring");
	alias.put("spring-beans", "spring");
	alias.put("spring-context", "spring");
	alias.put("spring-core", "spring");
	alias.put("spring-web", "spring");
	alias.put("spring-webmvc", "spring");
	alias.put("servlet-api", "apache2");
	alias.put("", "");
	alias.put("", "");
	alias.put("", "");
	alias.put("", "");
	alias.put("", "");
	alias.put("", "");
}
	
static class Jar implements Comparable<Jar> {
	public String name;
	public String version;
	public int compareTo(Jar b) { return name.compareTo(b.name); }
	public String toString() { return name + '-' + version; }
}
	/** Creates new form AboutOffstageArts */
	public AboutOffstageArts(java.awt.Frame parent, boolean modal)
	throws MalformedURLException, IOException
	{
		super(parent, false);
		initComponents();

		// Read and parse jarlist.txt
		List<Jar> jars = new ArrayList();
		ClassLoader cl = getClass().getClassLoader();
		BufferedReader in = new BufferedReader(new InputStreamReader(
			cl.getResourceAsStream("offstage/jarlist.txt")));
		String line;
		while ((line = in.readLine()) != null) {
			String[] ll = line.split(",");
			Jar jar = new Jar();
				jar.name = ll[0];
				jar.version = ll[1];
			jars.add(jar);
		}
		in.close();
		
		Collections.sort(jars);
		
		// Set model in GUI
		DefaultListModel model = new DefaultListModel();
		for (Jar jar : jars) model.addElement(jar);
		depList.setModel(model);
	}
	
	public void initRuntime(App app)
	{
		app.setUserPrefs(this);
	}
	
	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        jSplitPane2 = new javax.swing.JSplitPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        licensePane = new javax.swing.JTextPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        depList = new javax.swing.JList();
        jScrollPane3 = new javax.swing.JScrollPane();
        mainLicense = new javax.swing.JTextPane();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jSplitPane1.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);

        licensePane.setFont(licensePane.getFont().deriveFont(licensePane.getFont().getSize()-1f));
        jScrollPane2.setViewportView(licensePane);

        jSplitPane2.setRightComponent(jScrollPane2);

        depList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        depList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                depListValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(depList);

        jSplitPane2.setLeftComponent(jScrollPane1);

        jSplitPane1.setBottomComponent(jSplitPane2);

        mainLicense.setContentType("text/html");
        mainLicense.setEditable(false);
        mainLicense.setFont(mainLicense.getFont());
        mainLicense.setText("<html>\n  <body>\n    <p style=\"margin-top: 0\">OffstageArts: Enterprise Database for Arts Organizations<br>\nCopyright &copy; 2005-2008 by Robert Fischer</p>\n\n<p>This program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.</p>\n\n<p>This program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License below for more details.</p>\n\n<p>OffstageArts incorporates a number of free software products, each with its own\nlicensing terms.  See below for further details.</p>\n  </body>\n</html>\n");
        mainLicense.setPreferredSize(new java.awt.Dimension(600, 600));
        jScrollPane3.setViewportView(mainLicense);

        jSplitPane1.setTopComponent(jScrollPane3);

        getContentPane().add(jSplitPane1, java.awt.BorderLayout.CENTER);

        jButton1.setText("OK");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);

        getContentPane().add(jPanel1, java.awt.BorderLayout.SOUTH);

        pack();
    }// </editor-fold>//GEN-END:initComponents

	private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
		setVisible(false);
		// TODO add your handling code here:
	}//GEN-LAST:event_jButton1ActionPerformed

	private void depListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_depListValueChanged
		Jar jar = (Jar)depList.getSelectedValue();
		String name = jar.name;
		String n2 = alias.get(name);
		name = (n2 == null ? name : n2);
		String license = null;
		try {
			license = Licensor.readLicenseFile(getClass(), name + ".txt");
		} catch(Exception e) {
			license = "No license provided!";
		}
		licensePane.setText(license);
		licensePane.setCaretPosition(0);
	}//GEN-LAST:event_depListValueChanged
	
	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) throws Exception {
//		java.awt.EventQueue.invokeLater(new Runnable() {
//			public void run() {
				AboutOffstageArts dialog = new AboutOffstageArts(new javax.swing.JFrame(), true);
				dialog.addWindowListener(new java.awt.event.WindowAdapter() {
					public void windowClosing(java.awt.event.WindowEvent e) {
						System.exit(0);
					}
				});
				dialog.setVisible(true);
//			}
//		});
	}
	
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList depList;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JSplitPane jSplitPane2;
    private javax.swing.JTextPane licensePane;
    private javax.swing.JTextPane mainLicense;
    // End of variables declaration//GEN-END:variables
	
}
